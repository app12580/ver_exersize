目录：
1、介绍
2、绑定class的集中方式
3、绑定内联样式(css)
4、自动添加前缀
5、多重值

1、介绍
v-bind 可以处理class 和 style 但是易出错
Vue对此进行了增强，可以使用对象或数组赋值

2、绑定class的几种方式
一、对象语法
1) v-bind + <className,flag>的字符串对象
<div v-bind:class="{ active: isActive }"></div>

注意：还可以与html原生的css配套使用
<div class="static"
     v-bind:class="{ active: isActive, 'text-danger': hasError }">
</div>

2)v-bind + <className,flag>的Vue对象
<div v-bind:class="classObject"></div>
data: {
  classObject: {
    active: true,
    'text-danger': false
  }
}

3)v-bind + computed 的对象
<div v-bind:class="classObject"></div>
data: {
  isActive: true,
  error: null
},
computed: {
  classObject: function () {
    return {
      active: this.isActive && !this.error,
      'text-danger': this.error && this.error.type === 'fatal'
    }
  }
}

二、数组语法
1、v-bind + 数组   //这个数组的元素是变量名，变量值为字符串类型
<div v-bind:class="[activeClass, errorClass]"></div>

data: {
  activeClass: 'active',
  errorClass: 'text-danger'
}

2、v-bind + 数组中含有表达式
<div v-bind:class="[isActive ? activeClass : '', errorClass]"></div>    //activeClass 和 errorClass 是有效的class名称
<div v-bind:class="[{ active: isActive }, errorClass]"></div>

三、用在组件上
//  组件定义时候的class 和 使用组件时候的class 会合并到一块
Vue.component('my-component', {
  template: '<p class="foo bar">Hi</p>'
})
<my-component class="baz boo"></my-component>
<my-component v-bind:class="{ active: isActive }"></my-component>

3、绑定内联样式   (绑定Css)
一、对象语法
//CSS命名习惯： 用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来)

1)v-bind + style 内联字符串描述对象
<div v-bind:style="{ color: activeColor, fontSize: fontSize + 'px' }"></div>
data: {
  activeColor: 'red',
  fontSize: 30
}

2)v-bind + data 对象
<div v-bind:style="styleObject"></div>
data: {
  styleObject: {
    color: 'red',
    fontSize: '13px'
  }
}

3）数组： <div v-bind:style="[baseStyles, overridingStyles]"></div>

4)自动添加前缀
当 v-bind:style 使用需要添加浏览器引擎前缀的 CSS 属性时，如 transform，Vue.js 会自动侦测并添加相应的前缀。

5)多重值
 //同一个元素里面 配置 多个属性，这多个属性中只有一个能生效。从前后往后遍历这多个属性，第一个浏览器支持的属性才会生效
 <div :style="{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"></div>











