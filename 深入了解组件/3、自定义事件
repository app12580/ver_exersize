

1、事件名
事件名：完全匹配，不存在大小写转换或者驼峰命名，中划线命名的转换

模拟事件方法：
this.$emit('myEvent')
<my-component v-on:my-event="doSomething"></my-component>

//html 不区分大小写
推荐你始终使用 kebab-case 的事件名。

2、自定义组件的v-model

Vue.component('base-checkbox', {
  model: {
    prop: 'checked',
    event: 'change'
  },
  props: {
    checked: Boolean
  },
  template: `
    <input
      type="checkbox"
      v-bind:checked="checked"
      v-on:change="$emit('change', $event.target.checked)"
    >
  `
})

<base-checkbox v-model="lovingVue"></base-checkbox>

-- 组件里面的 event 参数 文档没有说明过

文档里面的鬼话：
一个组件上的 v-model 默认会利用名为 value 的 prop 和名为 input 的事件，但是像单选框、复选框等类型的输入控件可能会将 value 特性用于不同的目的。model 选项可以用来避免这样的冲突：
现在在这个组件上使用 v-model 的时候：
<base-checkbox v-model="lovingVue"></base-checkbox>
这里的 lovingVue 的值将会传入这个名为 checked 的 prop。同时当 <base-checkbox> 触发一个 change 事件并附带一个新的值的时候，这个 lovingVue 的属性将会被更新。
注意你仍然需要在组件的 props 选项里声明 checked 这个 prop。

翻译成人话：(猜测)
参考博客：https://www.jb51.net/article/113112.htm
1、关于 $emit
      第一个参数表示调用的方法，第二个参数表示传入方法的参数

2、
<currency-input v-model="price"></currentcy-input>
<!--上行代码是下行的语法糖-->
<currency-input :value="price" @input="price = arguments[0]"></currency-input>






